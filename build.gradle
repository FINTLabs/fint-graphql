buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.20.0'
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'no.fint'
version = "${version}-${apiVersion}"
sourceCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
    maven {
        url "http://dl.bintray.com/fint/maven"
    }
}


apply from: 'https://raw.githubusercontent.com/FINTlibs/fint-buildscripts/master/dependencies.gradle'

cglibVersion = '3.2.10'
lombokVersion = '1.18.4'
spockSpringVersion = '1.2-RC3-groovy-2.5'

dependencies {
    compile('no.fint:fint-model-resource:0.3.3')
    compile("no.fint:fint-utdanning-resource-model-java:${apiVersion}")
    compile("no.fint:fint-administrasjon-resource-model-java:${apiVersion}")

    compile('com.graphql-java-kickstart:graphql-spring-boot-starter:5.4')
    compile('com.graphql-java-kickstart:graphiql-spring-boot-starter:5.4')
    compile('com.graphql-java-kickstart:graphql-java-tools:5.4.1')
    compile('com.zhokhov.graphql:graphql-datetime-spring-boot-starter:1.4.0')

    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('org.springframework.boot:spring-boot-starter')
    compileOnly("org.projectlombok:lombok:${lombokVersion}")

    runtime('org.springframework.boot:spring-boot-starter-actuator')

    testCompile("cglib:cglib-nodep:${cglibVersion}")
    testCompile("org.spockframework:spock-spring:${spockSpringVersion}")
    testCompile("org.spockframework:spock-core:${spockSpringVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.squareup.okhttp3:mockwebserver:3.12.1')
}


task copyExternalDependencies(type: Copy) {
    from configurations.runtime
    into "$buildDir/deps/external"
    exclude '**/fint-*.jar'
}

task copyFintDependencies(type: Copy) {
    from configurations.runtime
    into "$buildDir/deps/fint"
    include '**/fint-*.jar'
}

build.dependsOn(copyExternalDependencies)
build.dependsOn(copyFintDependencies)

jar {
    enabled = true
    manifest {
        attributes(
                "Manifest-Version": "1.0",
                "Main-Class": "no.fint.graphql.Application",
                "Specification-Version": "${apiVersion}",
                "Implementation-Version": "${version}",
                "Class-Path": configurations.runtime.collect { it.getName() }.join(' ')
        )
    }
}

bootJar {
    enabled = false
}
