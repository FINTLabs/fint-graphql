package no.fint.graphql.model.felles.person;

import graphql.schema.DataFetchingEnvironment;
import no.fint.graphql.WebClientRequest;
import no.fint.graphql.model.Endpoints;
import no.fint.model.resource.felles.PersonResource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

import java.util.Objects;
import java.util.stream.Stream;

@Service("fellesPersonService")
public class PersonService {

    @Autowired
    private WebClientRequest webClientRequest;

    @Autowired
    private Endpoints endpoints;

    public Mono<PersonResource> getPersonResourceById(String id, String value, DataFetchingEnvironment dfe) {
        return Flux.fromStream(Stream
                .of(endpoints.getAdministrasjonPersonal(), endpoints.getUtdanningElev(), endpoints.getFelles())
                .map(e -> e + "/person/"
                        + id
                        + "/"
                        + value)
                .map(r -> getPersonResource(r, dfe)))
                .flatMap(Mono::flux)
                .filter(Objects::nonNull)
                .next();
    }

    public Mono<PersonResource> getPersonResource(String url, DataFetchingEnvironment dfe) {
        return webClientRequest.get(url, PersonResource.class, dfe);
    }
}